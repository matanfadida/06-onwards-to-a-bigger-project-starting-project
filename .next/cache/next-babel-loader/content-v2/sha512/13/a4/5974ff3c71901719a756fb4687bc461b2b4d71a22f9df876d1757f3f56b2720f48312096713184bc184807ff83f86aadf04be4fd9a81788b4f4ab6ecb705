{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\u05DE\\u05EA\\u05DF \\u05E4\\u05D3\\u05D9\\u05D3\\u05D4\\\\Desktop\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\index.js\";\nimport { MongoClient } from \"mongodb\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React Meetup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n};\n\nexport async function getStaticProps() {\n  const client = await MongoClient.connect(\"mongodb+srv://matan:2JjrOiOBPnz5E1My@cluster0.1p1gd.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db(); //get hold of that database to which we're connecting here.\n\n  const meetupCollection = db.collection(\"meetups\");\n  const meetupsList = await meetupCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetupsList.map(meetup => ({\n        title: meetup.title,\n        image: meetup.image,\n        address: meetup.address,\n        id: meetup._id.toString()\n      }))\n    }\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/מתן פדידה/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["MongoClient","Fragment","Head","MeetupList","HomePage","props","meetups","getStaticProps","client","connect","db","meetupCollection","collection","meetupsList","find","toArray","close","map","meetup","title","image","address","id","_id","toString"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,sBAAO,QAAC,QAAD;AAAA,4BACL,QAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADK,eAIL,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAJK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAMD,CAPD;;AASA,OAAO,eAAeC,cAAf,GAAgC;AAErC,QAAMC,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CACnB,qGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX,CALqC,CAKb;;AAExB,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AAEA,QAAMC,WAAW,GAAG,MAAMF,gBAAgB,CAACG,IAAjB,GAAwBC,OAAxB,EAA1B;AAEAP,EAAAA,MAAM,CAACQ,KAAP;AAEA,SAAO;AACLX,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEO,WAAW,CAACI,GAAZ,CAAgBC,MAAM,KAAK;AAClCC,QAAAA,KAAK,EAAED,MAAM,CAACC,KADoB;AAElCC,QAAAA,KAAK,EAAEF,MAAM,CAACE,KAFoB;AAGlCC,QAAAA,OAAO,EAAEH,MAAM,CAACG,OAHkB;AAIlCC,QAAAA,EAAE,EAAEJ,MAAM,CAACK,GAAP,CAAWC,QAAX;AAJ8B,OAAL,CAAtB;AADJ;AADF,GAAP;AAUD;AAED,eAAepB,QAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\r\nimport { Fragment } from \"react\";\r\nimport Head from \"next/head\";\r\n\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\n\r\nconst HomePage = (props) => {\r\n  return <Fragment>\r\n    <Head>\r\n      <title>React Meetup</title>\r\n    </Head>\r\n    <MeetupList meetups={props.meetups} />;\r\n  </Fragment>\r\n};\r\n\r\nexport async function getStaticProps() {\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://matan:2JjrOiOBPnz5E1My@cluster0.1p1gd.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db(); //get hold of that database to which we're connecting here.\r\n\r\n  const meetupCollection = db.collection(\"meetups\");\r\n\r\n  const meetupsList = await meetupCollection.find().toArray();\r\n  \r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetups: meetupsList.map(meetup => ({\r\n        title: meetup.title,\r\n        image: meetup.image,\r\n        address: meetup.address,\r\n        id: meetup._id.toString(),\r\n      })),\r\n    },\r\n  };\r\n}\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}