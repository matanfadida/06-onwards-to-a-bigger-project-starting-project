{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\\\u05DE\\u05EA\\u05DF \\u05E4\\u05D3\\u05D9\\u05D3\\u05D4\\\\Desktop\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\n\nvar MeetupDetail = function MeetupDetail() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetails, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = MeetupDetail;\nexport var __N_SSG = true;\nexport default MeetupDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetail\");","map":{"version":3,"sources":["C:/Users/מתן פדידה/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetails","MeetupDetail","props","meetupData","image","title","address","description"],"mappings":";;;;;AAEA,OAAOA,aAAP,MAA0B,wCAA1B;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,sBACE,QAAC,aAAD;AACA,IAAA,KAAK,EAAEC,KAAK,CAACC,UAAN,CAAiBC,KADxB;AAEA,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAFxB;AAGA,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH1B;AAIA,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJ9B;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CATD;;KAAMN,Y;;AAyDN,eAAeA,YAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\r\n\r\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\r\n\r\nconst MeetupDetail = () => {\r\n  return (\r\n    <MeetupDetails\r\n    image={props.meetupData.image}\r\n    title={props.meetupData.title}\r\n    address={props.meetupData.address}\r\n    description={props.meetupData.description}\r\n    />\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://matan:2JjrOiOBPnz5E1My@cluster0.1p1gd.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db(); //get hold of that database to which we're connecting here.\r\n\r\n  const meetupCollection = db.collection(\"meetups\");\r\n\r\n  const meetupsList = await meetupCollection.find().toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetupsList.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://matan:2JjrOiOBPnz5E1My@cluster0.1p1gd.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db(); //get hold of that database to which we're connecting here.\r\n\r\n  const meetupCollection = db.collection(\"meetups\");\r\n\r\n  const selectedMeetup = await meetupCollection.findOne({_id: ObjectId(meetupId)});\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: selectedMeetup._id.toString(),\r\n        title: selectedMeetup.title,\r\n        image: selectedMeetup.image,\r\n        address: selectedMeetup.address,\r\n        description: selectedMeetup.description,\r\n      },\r\n    },\r\n  };\r\n}\r\nexport default MeetupDetail;\r\n"]},"metadata":{},"sourceType":"module"}